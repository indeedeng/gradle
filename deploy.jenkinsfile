#!/usr/bin/env groovy
@Library("pipeline@release/2.x") _

/**
 * This file tells Pipeline Jenkins how to build and deploy the project.
 * See https://wiki.indeed.com/display/PIPELINE/The+Jenkinsfile for details.
 */

script = this

bootstrap(script) {
    // Git URL
    gitConfig.gitUrl = "git@code.corp.indeed.com:gradle/gradle.git"
    // Main development branch. Note: if you put develop here, master will be ignored by the pipeline.
    gitConfig.gitBranch = "indeed/master"
    // Enable Jira actions. Disable this will disable all interactions between Jenkins and Jira.
    jiraConfig.enableJiraActions = false
    // JIRA project where deploy tickets should be created
    jiraConfig.jiraProjectKey = "GRADLE"
    // Path to the deployable generated by the build command
    buildConfig.deployablePath = "build/distributions/gradle-*-bin.zip"
    // Jenkins will send an email when there is a new build available to the following list of comma-separated addresses
    config.newBuildAvailableEmailList = "dev-and-build-team@indeed.com"
    // Jenkins will send an email if the build fails to the following list of comma-separated addresses and everyone who committed since the last successful build
    config.failureEmailList = config.newBuildAvailableEmailList
    // Product group
    config.productGroup = "dev-and-build"
    // Jenkins will email all commit authors
    config.sendEmailsToCommitAuthors = false

    // The URL of your current version in prod
    // For example: https://example.com/private/current_version.txt
    config.currentProdVersionUrl = ""

    // Set true to fail the build if verification instructions are not provided in annotated git tags for each issue
    config.requireVerificationInstructions = false

    // Set true to enable Slack notifications
    slackConfig.enable = false
    slackConfig.channel = "#dev-and-build-team"

    // This requires JDK 10
    config.nodeName = "indeed-jdk10-xlarge"
}

buildPipeline(script) {
    createNonDeployableArtifact(script) {
        sh "./indeed-build-jenkins.sh"
        withCredentials([
                usernamePassword(
                    credentialsId: "dev-and-build-nexus",
                    usernameVariable: "NEXUS_USERNAME",
                    passwordVariable: "NEXUS_PASSWORD")]) {
            sh "nexus_username=${NEXUS_USERNAME} nexus_password=${NEXUS_PASSWORD} ./indeed-publish.sh"
        }
    }
}

